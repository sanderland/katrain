name: build_osx

on:
  push:
    branches: [ master ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  osx_app:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.7.8"

    - name: Install system dependencies
      run: |
        brew update
        brew install libzip
        brew install --build-from-source sdl2 sdl2_image sdl2_ttf sdl2_mixer

    - name: Build KataGo
      run: |
        rm -f katrain/KataGo/katago
        rm -f katrain/KataGo/*.dll
        rm -f katrain/KataGo/katago.exe
        cd ..
        git clone --branch stable https://github.com/lightvector/KataGo.git
        pushd KataGo/cpp
        cmake . -DUSE_BACKEND=OPENCL -DBUILD_DISTRIBUTED=1
        make -j$(sysctl -n hw.ncpu)
        cp katago ../../katrain/katrain/KataGo/katago-osx
        popd

    - name: Install Python dependencies
      run: |
        uv sync
        uv pip install pyinstaller

    - name: Get app version
      run: |
        $version = python -c "from katrain.core.constants import VERSION; print(VERSION)"
        echo "KATRAIN_VERSION=$version" >> $env:GITHUB_ENV

    - name: Build app with PyInstaller
      run: |
        uv run pyinstaller spec/katrain.spec --clean --noconfirm

    - name: Sign the app (ad-hoc)
      run: |
        # Sign the app bundle for local testing
        codesign --force --deep --sign - dist/KaTrain.app

    - name: Create DMG
      run: |
        # Create a DMG file
        mkdir -p dmg_temp
        cp -R dist/KaTrain.app dmg_temp/
        
        # Create Applications symlink for drag-and-drop installation
        ln -s /Applications dmg_temp/Applications
        
        # Create the DMG
        hdiutil create -volname "KaTrain ${{ env.KATRAIN_VERSION }}" \
                       -srcfolder dmg_temp \
                       -ov \
                       -format UDZO \
                       "KaTrain-${{ env.KATRAIN_VERSION }}.dmg"
        
        # Prepare output directory
        mkdir -p osx_app
        mv "KaTrain-${{ env.KATRAIN_VERSION }}.dmg" osx_app/

    - name: Upload app as artifact
      uses: actions/upload-artifact@v4
      with:
        name: KaTrainOSX
        path: osx_app
