name: build_windows

on:
  push:
    branches: [ master ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  windows_exe:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.7.8"

    - name: Install Python dependencies
      run: |
        uv sync
        uv pip install pyinstaller

    - name: Get app version
      run: |
        $version = python -c "from katrain.core.constants import VERSION; print(VERSION)"
        echo "KATRAIN_VERSION=$version" >> $env:GITHUB_ENV
      shell: powershell

    - name: Build executables with PyInstaller
      run: |
        uv run pyinstaller spec/katrain.spec --clean --noconfirm
      shell: powershell

    - name: Create archives
      run: |
        # Create output directory
        New-Item -ItemType Directory -Path "windows_exe" -Force
        
        # Copy executables to output directory
        if (Test-Path "dist/KaTrain") {
            Compress-Archive -Path "dist/KaTrain" -DestinationPath "windows_exe/KaTrain-${{ env.KATRAIN_VERSION }}-folder.zip"
        }
        if (Test-Path "dist/DebugKaTrain") {
            Compress-Archive -Path "dist/DebugKaTrain" -DestinationPath "windows_exe/DebugKaTrain-${{ env.KATRAIN_VERSION }}-folder.zip"
        }
        if (Test-Path "dist/KaTrain.exe") {
            Copy-Item "dist/KaTrain.exe" "windows_exe/KaTrain-${{ env.KATRAIN_VERSION }}.exe"
        }
        if (Test-Path "dist/DebugKaTrain.exe") {
            Copy-Item "dist/DebugKaTrain.exe" "windows_exe/DebugKaTrain-${{ env.KATRAIN_VERSION }}.exe"
        }
      shell: powershell

    - name: Upload Windows executables as artifact
      uses: actions/upload-artifact@v4
      with:
        name: KaTrainWindows
        path: windows_exe 